// @/src/pages/sign-up.tsx
import { zodResolver } from "@hookform/resolvers/zod";
import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useCallback } from "react";
import { useForm } from "react-hook-form";
import { z } from "zod";
import { Button, Input } from "../components";
import { ISignUp, trpc } from "../utils/trpc";

export type SignUpForm = ISignUp & { confirmPassword: string };

const SignUp: NextPage = () => {
  const router = useRouter();
  const {
    register,
    handleSubmit,
    formState: { errors, dirtyFields },
  } = useForm<SignUpForm>({
    resolver: zodResolver(
      z
        .object({
          username: z
            .string({ required_error: "Field is required" })
            .min(4, { message: "Too short" })
            .max(12, { message: "Too long" }),
          email: z
            .string({ required_error: "Field is required" })
            .email({ message: "Incorrect email format" })
            .max(10, { message: "Too long" }),
          password: z
            .string({ required_error: "Field is required" })
            .min(4, { message: "Too short" })
            .max(12, { message: "Too long" }),
          confirmPassword: z.string({ required_error: "Field is required" }),
        })
        .refine((data) => data.password === data.confirmPassword, {
          message: "Passwords don't match",
          path: ["confirmPassword"],
        })
    ),
  });

  const { mutateAsync } = trpc.useMutation(["auth.signup"]);

  const onSubmit = useCallback(
    async (data: ISignUp) => {
      const result = await mutateAsync(data);
      if (result.status === 201) {
        router.push("/");
      }
    },
    [mutateAsync, router]
  );

  return (
    <div>
      <Head>
        <title>Next App - Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-full flex justify-center items-center">
        <main>
        <form
          className="flex items-center justify-center h-screen w-full"
          onSubmit={handleSubmit(onSubmit)}
        >
          <div className="w-96 bg-slate-50 shadow-md p-8">

              <h2 className="text-3xl font-semibold">Create an account!</h2>
              <Input
                type="text"
                placeholder="Type your username..."
                name="username"
                label="Username"
                register={register}
                error={errors.username}
                isDirty={dirtyFields.username}
              />
              <Input
                type="email"
                placeholder="Type your email..."
                name="email"
                label="Email"
                register={register}
                error={errors.email}
                isDirty={dirtyFields.email}
              />
              <Input
                type="password"
                placeholder="Type your password..."
                name="password"
                label="Password"
                register={register}
                error={errors.password}
                isDirty={dirtyFields.password}
              />
              <Input
                type="password"
                placeholder="Retype your password..."
                name="confirmPassword"
                label="Confirm password"
                register={register}
                error={errors.confirmPassword}
                isDirty={dirtyFields.confirmPassword}
              />
              <div className="flex space-x-4 mt-10">
                <Link href="/login" className="link">
                  <Button variant="secondary">Sign In</Button>
                </Link>
                <Button type="submit">Sign Up</Button>
              </div>
            </div>
        </form>
      </main>
      {/* <div className="w-1/2 relative">
        <Image src="/bg2.png" alt="login-bg" layout="fill" objectFit="cover"/>
      </div> */}
      </div>
    </div>
  );
};

export default SignUp;
