// @/src/pages/index.tsx
import { zodResolver } from "@hookform/resolvers/zod";
import type { NextPage } from "next";
import { signIn } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useCallback } from "react";
import { useForm } from "react-hook-form";
import { z } from "zod";
import { Input } from "../components";

const Home: NextPage = () => {
  const {
    register,
    handleSubmit,
    formState: { errors, dirtyFields },
  } = useForm<{
    email: string;
    password: string;
  }>({
    mode: 'onChange',
    resolver: zodResolver(
      z.object({
        email: z
          .string({ required_error: "Field is required" }).email({message:"Incorrect email format"})
          .max(10, { message: "Too long" }),
        password: z
          .string({ required_error: "Field is required" })
          .min(4, { message: "Too short" })
          .max(12, { message: "Too long" }),
      })
    ),
  });
  console.log(errors)
  const onSubmit = useCallback(
    async (data: { email: string; password: string }) => {
      await signIn("credentials", { ...data, callbackUrl: "/dashboard" });
    },
    []
  );

  return (
    <div>
      <Head>
        <title>Next App - Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <form
          className="flex items-center justify-center h-screen w-full"
          onSubmit={handleSubmit(onSubmit)}
        >
          <div className="card w-96 bg-base-100 shadow-xl">
            <div className="card-body">
              <h2 className="card-title">Welcome back!</h2>
              <Input
                type="email"
                placeholder="Type your email..."
                register={register}
                label="Email"
                name="email"
                error={errors.email}
                isDirty={dirtyFields.email}
              />
              <Input
                type="password"
                placeholder="Type your password..."
                register={register}
                label="Password"
                name="password"
                error={errors.password}
                isDirty={dirtyFields.password}
              />
              <div className="card-actions items-center justify-between">
                <Link href="/sign-up" className="link">
                  Go to sign up
                </Link>
                <button className="btn btn-secondary" type="submit">
                  Login
                </button>
              </div>
            </div>
          </div>
        </form>
      </main>
    </div>
  );
};

export default Home;
